name: Build

on: 
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:


jobs:
  Build:
    name: Build appimagetool
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ARCH: 'x86_64'
            docker-image: 'appimagebuild'
          - ARCH: 'i386'
            docker-image: 'appimagebuild-i386'
          - ARCH: 'armhf'
            docker-image: 'appimagebuild-armhf-cross'
          - ARCH: 'aarch64'
            docker-image: 'appimagebuild-aarch64-cross'
      fail-fast: false
    env:
      DOCKER_IMAGE: quay.io/appimage/${{ matrix.docker-image }}
      ARCH: ${{ matrix.ARCH }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies for ARM and AARCH64
        if: endsWith(matrix.docker-image, 'cross') 
        run: |
          sudo apt-get update
          sudo apt-get -y install binfmt-support qemu-user-static

      - name: Build 
        shell: bash
        run: |
          if [[ "$ARCH" == "i386" ]]; then
            sudo dpkg --add-architecture i386
            sudo apt-get update
          fi
          bash -ex ci/ci-build.sh

      - name: List files
        run: |
          ls -lh build/out/*

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          # Artifact name
          name: appimagetool-${{ matrix.ARCH }}.build.zip
          path: build/out


  Release:
    needs: [Build]
    runs-on: ubuntu-latest
 
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1

      - name: Continuous Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
          chmod +x pyuploadtool-x86_64.AppImage
          ./pyuploadtool-x86_64.AppImage **/appimagetool*.AppImage*

